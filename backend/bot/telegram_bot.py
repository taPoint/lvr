#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Telegram Bot –¥–ª—è LVR –Ø–∑—ã–∫–æ–≤–∞—è —à–∫–æ–ª–∞
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @uzbekburg
"""

import asyncio
import logging
from telegram import Bot
from telegram.error import TelegramError
import json
import os
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class LVRBot:
    def __init__(self, token):
        self.bot = Bot(token=token)
        self.target_username = "uzbekburg"  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        
    async def send_form_data(self, name, phone, message=""):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @uzbekburg
        """
        try:
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            formatted_message = self._format_message(name, phone, message)
            
            # –ü–æ–ª—É—á–∞–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
            chat_id = await self._get_chat_id_by_username(self.target_username)
            
            if chat_id:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await self.bot.send_message(
                    chat_id=chat_id,
                    text=formatted_message,
                    parse_mode='HTML'
                )
                logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {self.target_username}")
                return True
            else:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.target_username}")
                return False
                
        except TelegramError as e:
            logger.error(f"–û—à–∏–±–∫–∞ Telegram: {e}")
            return False
        except Exception as e:
            logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
            return False
    
    def _format_message(self, name, phone, message):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã
        """
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")
        
        formatted_text = f"""
üéì <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ LVR –Ø–∑—ã–∫–æ–≤–∞—è —à–∫–æ–ª–∞</b>

üë§ <b>–ò–º—è:</b> {name}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}
üìù <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message if message else '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚è∞ <b>–í—Ä–µ–º—è:</b> {timestamp}

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üí° <i>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ LVR</i>
        """.strip()
        
        return formatted_text
    
    async def _get_chat_id_by_username(self, username):
        """
        –ü–æ–ª—É—á–∞–µ—Ç chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        """
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @uzbekburg
            return "1512193467"
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è chat_id: {e}")
            return None
    
    async def start_polling(self):
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
        """
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            await self.bot.get_me()
            logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
            
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
            # –ü–æ–∫–∞ —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ API)
async def send_form_to_telegram(name, phone, message=""):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ Telegram
    """
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv('TELEGRAM_BOT_TOKEN', '7879860306:AAHxoWZU1Sk5S-vlNWy4TgiUl72TZ0xZK5M')
    
    if not token:
        logger.error("–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    bot = LVRBot(token)
    return await bot.send_form_data(name, phone, message)

if __name__ == "__main__":
    # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
    token = os.getenv('TELEGRAM_BOT_TOKEN')
    
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
        exit(1)
    
    bot = LVRBot(token)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    asyncio.run(bot.start_polling())
