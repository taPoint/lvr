// JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü —Ç–µ–º
class TopicManager {
    constructor() {
        this.currentUser = null;
        this.currentTopic = null;
        this.exerciseResults = {};
        this.init();
    }

    init() {
        this.loadUserData();
        this.loadTopicData();
        this.setupEventListeners();
        this.checkAccess();
        this.loadProgress();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    loadUserData() {
        const userData = localStorage.getItem('pockets_user');
        if (userData) {
            this.currentUser = JSON.parse(userData);
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º—ã
    loadTopicData() {
        // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–º—ã –∏–∑ URL
        const path = window.location.pathname;
        const match = path.match(/topic(\d+)\.html/);
        if (match) {
            this.currentTopic = match[1];
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventListeners() {
        // –ö–Ω–æ–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
        const checkButtons = document.querySelectorAll('.exercise__btn--check');
        checkButtons.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const exerciseId = e.target.closest('.exercise').id;
                const exerciseNumber = exerciseId.replace('exercise', '');
                this.checkAnswer(parseInt(exerciseNumber));
            });
        });

        // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞
        const startTestBtn = document.getElementById('startTest');
        if (startTestBtn) {
            startTestBtn.addEventListener('click', () => {
                this.startTest();
            });
        }

        // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        const nextBtn = document.querySelector('.topic__nav-btn--next');
        if (nextBtn) {
            nextBtn.addEventListener('click', () => {
                this.nextTopic();
            });
        }

        const prevBtn = document.querySelector('.topic__nav-btn--prev');
        if (prevBtn) {
            prevBtn.addEventListener('click', () => {
                this.previousTopic();
            });
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–º–µ
    checkAccess() {
        if (!this.currentUser) {
            this.showAuthRequired();
            return;
        }

        const purchasedTopics = this.getPurchasedTopics();
        if (!purchasedTopics.includes(this.currentTopic)) {
            this.showPaymentRequired();
            return;
        }

        // –¢–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
        this.showTopicContent();
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–µ–º
    getPurchasedTopics() {
        const purchasedData = localStorage.getItem('pockets_purchased');
        if (purchasedData) {
            return JSON.parse(purchasedData);
        }
        return [];
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    showAuthRequired() {
        const topicContent = document.querySelector('.topic__content');
        if (topicContent) {
            topicContent.innerHTML = `
                <div class="topic__auth-required">
                    <div class="topic__auth-icon">üîí</div>
                    <h2 class="topic__auth-title">–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
                    <p class="topic__auth-description">–î–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ç–µ–º—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
                    <div class="topic__auth-actions">
                        <button class="topic__btn topic__btn--primary" onclick="topicManager.goToAuth()">–í–æ–π—Ç–∏</button>
                        <button class="topic__btn topic__btn--secondary" onclick="topicManager.goToMain()">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ–º–∞–º</button>
                    </div>
                </div>
            `;
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–ø–ª–∞—Ç—ã
    showPaymentRequired() {
        const topicContent = document.querySelector('.topic__content');
        if (topicContent) {
            topicContent.innerHTML = `
                <div class="topic__payment-required">
                    <div class="topic__payment-icon">üí∞</div>
                    <h2 class="topic__payment-title">–¢–µ–º–∞ –Ω–µ –∫—É–ø–ª–µ–Ω–∞</h2>
                    <p class="topic__payment-description">–î–ª—è –∏–∑—É—á–µ–Ω–∏—è —ç—Ç–æ–π —Ç–µ–º—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É</p>
                    <div class="topic__payment-actions">
                        <button class="topic__btn topic__btn--primary" onclick="topicManager.goToPayment()">–ö—É–ø–∏—Ç—å —Ç–µ–º—É</button>
                        <button class="topic__btn topic__btn--secondary" onclick="topicManager.goToMain()">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ–º–∞–º</button>
                    </div>
                </div>
            `;
        }
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–µ–º—ã
    showTopicContent() {
        // –ö–æ–Ω—Ç–µ–Ω—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ HTML, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        this.updateProgress();
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
    checkAnswer(exerciseNumber) {
        let isCorrect = false;
        let userAnswer = '';
        let correctAnswer = '';

        switch (exerciseNumber) {
            case 1:
                // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã –≥–ª–∞–≥–æ–ª–∞
                const selectedOption = document.querySelector(`input[name="q1"]:checked`);
                if (selectedOption) {
                    userAnswer = selectedOption.value;
                    correctAnswer = 'lives';
                    isCorrect = userAnswer === correctAnswer;
                }
                break;

            case 2:
                // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å –≤–≤–æ–¥–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã –≥–ª–∞–≥–æ–ª–∞
                userAnswer = document.getElementById('answer2').value.trim().toLowerCase();
                correctAnswer = 'works';
                isCorrect = userAnswer === correctAnswer;
                break;

            case 3:
                // –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
                userAnswer = document.getElementById('answer3').value.trim().toLowerCase();
                correctAnswer = 'i study at university';
                isCorrect = userAnswer === correctAnswer || 
                           userAnswer === 'i study at the university' ||
                           userAnswer === 'i study at a university';
                break;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.exerciseResults[exerciseNumber] = {
            isCorrect: isCorrect,
            userAnswer: userAnswer,
            correctAnswer: correctAnswer
        };

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.showExerciseResult(exerciseNumber, isCorrect, userAnswer, correctAnswer);

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        this.updateProgress();
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    showExerciseResult(exerciseNumber, isCorrect, userAnswer, correctAnswer) {
        const exercise = document.getElementById(`exercise${exerciseNumber}`);
        if (!exercise) return;

        // –£–±–∏—Ä–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        const existingResult = exercise.querySelector('.exercise__result');
        if (existingResult) {
            existingResult.remove();
        }

        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        const resultDiv = document.createElement('div');
        resultDiv.className = `exercise__result exercise__result--${isCorrect ? 'correct' : 'incorrect'}`;
        
        if (isCorrect) {
            resultDiv.innerHTML = `
                <div class="exercise__result-icon">‚úÖ</div>
                <p class="exercise__result-text">–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü!</p>
            `;
        } else {
            resultDiv.innerHTML = `
                <div class="exercise__result-icon">‚ùå</div>
                <p class="exercise__result-text">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <strong>${correctAnswer}</strong></p>
            `;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
        exercise.appendChild(resultDiv);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        resultDiv.style.opacity = '0';
        resultDiv.style.transform = 'translateY(-10px)';
        resultDiv.style.transition = 'all 0.3s ease';
        
        setTimeout(() => {
            resultDiv.style.opacity = '1';
            resultDiv.style.transform = 'translateY(0)';
        }, 100);
    }

    // –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
    startTest() {
        const testSection = document.querySelector('.test');
        if (testSection) {
            testSection.innerHTML = `
                <h2 class="test__title">–ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ—Å—Ç</h2>
                <div class="test__questions">
                    <div class="test__question">
                        <h3 class="test__question-title">–í–æ–ø—Ä–æ—Å 1</h3>
                        <p class="test__question-text">–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–æ—Ä–º—É –≥–ª–∞–≥–æ–ª–∞:</p>
                        <p class="test__question-text">"She ___ (work) in a hospital."</p>
                        <div class="test__options">
                            <label class="test__option"><input type="radio" name="test1" value="work" class="test__option-input"> <span class="test__option-text">work</span></label>
                            <label class="test__option"><input type="radio" name="test1" value="works" class="test__option-input"> <span class="test__option-text">works</span></label>
                        </div>
                    </div>
                    
                    <div class="test__question">
                        <h3 class="test__question-title">–í–æ–ø—Ä–æ—Å 2</h3>
                        <p class="test__question-text">–ü–æ—Å—Ç–∞–≤—å—Ç–µ –≥–ª–∞–≥–æ–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–æ—Ä–º—É:</p>
                        <p class="test__question-text">"My friend ___ (live) in Moscow."</p>
                        <input type="text" id="testAnswer2" placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç" class="test__input">
                    </div>
                    
                    <div class="test__question">
                        <h3 class="test__question-title">–í–æ–ø—Ä–æ—Å 3</h3>
                        <p class="test__question-text">–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π:</p>
                        <p class="test__question-text">"–û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±–∞–Ω–∫–µ"</p>
                        <input type="text" id="testAnswer3" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥" class="test__input">
                    </div>
                </div>
                
                <div class="test__actions">
                    <button class="test__btn test__btn--primary" onclick="topicManager.submitTest()">–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç</button>
                </div>
            `;
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç
    submitTest() {
        let correctAnswers = 0;
        const totalQuestions = 3;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç—ã
        const test1 = document.querySelector('input[name="test1"]:checked');
        if (test1 && test1.value === 'works') correctAnswers++;

        const test2 = document.getElementById('testAnswer2').value.trim().toLowerCase();
        if (test2 === 'lives') correctAnswers++;

        const test3 = document.getElementById('testAnswer3').value.trim().toLowerCase();
        if (test3 === 'he works in a bank' || test3 === 'he works in bank') correctAnswers++;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.showTestResult(correctAnswers, totalQuestions);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
    showTestResult(correctAnswers, totalQuestions) {
        const testSection = document.querySelector('.test');
        if (testSection) {
            const percentage = Math.round((correctAnswers / totalQuestions) * 100);
            const grade = this.getGrade(percentage);
            
            testSection.innerHTML = `
                <h2 class="test__title">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞</h2>
                <div class="test__results">
                    <div class="test__result-score">
                        <h3 class="test__result-title">–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${correctAnswers} –∏–∑ ${totalQuestions}</h3>
                        <div class="test__result-percentage">${percentage}%</div>
                        <div class="test__result-grade">${grade}</div>
                    </div>
                    
                    <div class="test__result-details">
                        <p class="test__result-detail">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers}</p>
                        <p class="test__result-detail">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${totalQuestions - correctAnswers}</p>
                    </div>
                    
                    <div class="test__result-actions">
                        <button class="test__btn test__btn--primary" onclick="topicManager.retakeTest()">–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ</button>
                        <button class="test__btn test__btn--secondary" onclick="topicManager.goToMain()">–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–µ–º–∞–º</button>
                    </div>
                </div>
            `;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.saveTestResult(percentage);
    }

    // –ü–æ–ª—É—á–∏—Ç—å –æ—Ü–µ–Ω–∫—É
    getGrade(percentage) {
        if (percentage >= 90) return '–û—Ç–ª–∏—á–Ω–æ! üèÜ';
        if (percentage >= 80) return '–•–æ—Ä–æ—à–æ! üëç';
        if (percentage >= 70) return '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ! ‚úÖ';
        if (percentage >= 60) return '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! üîÑ';
        return '–ù—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª! üìö';
    }

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
    saveTestResult(percentage) {
        const testResults = JSON.parse(localStorage.getItem('pockets_test_results') || '{}');
        testResults[this.currentTopic] = {
            percentage: percentage,
            date: new Date().toISOString()
        };
        localStorage.setItem('pockets_test_results', JSON.stringify(testResults));
    }

    // –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
    retakeTest() {
        this.startTest();
    }

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    loadProgress() {
        const progressElement = document.querySelector('.topic__progress-text');
        if (progressElement) {
            const progress = this.calculateProgress();
            progressElement.textContent = `–ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress}%`;
        }
    }

    // –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    calculateProgress() {
        const totalExercises = 3;
        const completedExercises = Object.keys(this.exerciseResults).length;
        return Math.round((completedExercises / totalExercises) * 100);
    }

    // –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
    updateProgress() {
        this.loadProgress();
    }

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    goToAuth() {
        window.location.href = '../auth.html';
    }

    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ
    goToPayment() {
        sessionStorage.setItem('payment_topic', this.currentTopic);
        window.location.href = '../payment.html';
    }

    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    goToMain() {
        window.location.href = '../pockets.html';
    }

    // –°–ª–µ–¥—É—é—â–∞—è —Ç–µ–º–∞
    nextTopic() {
        const nextTopicNumber = parseInt(this.currentTopic) + 1;
        if (nextTopicNumber <= 5) {
            window.location.href = `topic${nextTopicNumber}.html`;
        }
    }

    // –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Ç–µ–º–∞
    previousTopic() {
        const prevTopicNumber = parseInt(this.currentTopic) - 1;
        if (prevTopicNumber >= 1) {
            window.location.href = `topic${prevTopicNumber}.html`;
        }
    }
}

// CSS —Å—Ç–∏–ª–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
const style = document.createElement('style');
style.textContent = `
    .exercise__result {
        margin-top: 15px;
        padding: 15px;
        border-radius: 6px;
        text-align: center;
    }

    .exercise__result--correct {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .exercise__result--incorrect {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }

    .exercise__result-icon {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .exercise__result-text {
        margin: 0;
        font-weight: 500;
    }

    .test__questions {
        margin-bottom: 30px;
    }

    .test__question {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
        border-left: 4px solid #007bff;
    }

    .test__question-title {
        color: #007bff;
        margin-bottom: 15px;
    }

    .test__question-text {
        color: #555;
        margin-bottom: 10px;
    }

    .test__options {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 15px;
    }

    .test__option {
        display: flex;
        align-items: center;
        padding: 10px 15px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .test__option:hover {
        border-color: #007bff;
        background-color: #f8f9fa;
    }

    .test__option-input {
        margin-right: 10px;
        transform: scale(1.2);
    }

    .test__option-text {
        color: #555;
    }

    .test__input {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid #e0e0e0;
        border-radius: 6px;
        font-size: 16px;
        transition: border-color 0.3s ease;
        margin-top: 15px;
    }

    .test__input:focus {
        outline: none;
        border-color: #007bff;
        box-shadow: 0 0 0 3px rgba(0,123,255,0.1);
    }

    .test__actions {
        text-align: center;
    }

    .test__results {
        text-align: center;
        padding: 30px;
    }

    .test__result-title {
        color: #007bff;
        margin-bottom: 20px;
    }

    .test__result-percentage {
        font-size: 48px;
        font-weight: bold;
        color: #28a745;
        margin-bottom: 10px;
    }

    .test__result-grade {
        font-size: 24px;
        color: #6c757d;
        margin-bottom: 30px;
    }

    .test__result-details {
        margin-bottom: 30px;
    }

    .test__result-detail {
        color: #666;
        margin-bottom: 10px;
    }

    .test__result-actions {
        display: flex;
        flex-direction: column;
        gap: 15px;
        max-width: 300px;
        margin: 0 auto;
    }

    .topic__auth-required,
    .topic__payment-required {
        text-align: center;
        padding: 60px 20px;
    }

    .topic__auth-icon,
    .topic__payment-icon {
        font-size: 64px;
        margin-bottom: 20px;
    }

    .topic__auth-title,
    .topic__payment-title {
        color: #dc3545;
        margin-bottom: 15px;
    }

    .topic__auth-description,
    .topic__payment-description {
        color: #6c757d;
        margin-bottom: 30px;
        font-size: 18px;
    }

    .topic__auth-actions,
    .topic__payment-actions {
        display: flex;
        flex-direction: column;
        gap: 15px;
        max-width: 300px;
        margin: 0 auto;
    }

    .topic__btn {
        padding: 15px 30px;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        width: 100%;
    }

    .topic__btn--primary {
        background-color: #007bff;
        color: white;
    }

    .topic__btn--primary:hover {
        background-color: #0056b3;
        transform: translateY(-2px);
    }

    .topic__btn--secondary {
        background-color: #6c757d;
        color: white;
    }

    .topic__btn--secondary:hover {
        background-color: #545b62;
        transform: translateY(-2px);
    }

    /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
    @media (max-width: 768px) {
        .test__result-actions,
        .topic__auth-actions,
        .topic__payment-actions {
            max-width: 100%;
        }
        
        .test__question {
            padding: 15px;
        }
    }
`;
document.head.appendChild(style);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ç–µ–º
let topicManager;
document.addEventListener('DOMContentLoaded', () => {
    topicManager = new TopicManager();
});
